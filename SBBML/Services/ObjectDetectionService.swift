//
// Copyright (C) Schweizerische Bundesbahnen SBB, 2021.
//

import Foundation
import Combine
import AVFoundation
import UIKit

/// A Service who publishes ``DetectedObject``s, ``ObjectDetectionError`` and performance metrics. To use SBB ML, this service needs to be passed to ``CameraStreamView`` as init parameter.
public class ObjectDetectionService: ObjectDetectionServiceProtocol {
    
    /// Publishes all detected objects (and updates their frames)
    public var detectedObjectsPublisher: AnyPublisher<[DetectedObject], Never> {
        detectedObjectsSubject
            .removeDuplicates()
            .receive(on: DispatchQueue.main)
            .eraseToAnyPublisher()
    }
    private let detectedObjectsSubject = CurrentValueSubject<[DetectedObject], Never>([DetectedObject]())
    private var detectedObjectsSubscription: Cancellable!
    
    /// Publishes all errors occuring during the usage of ``ObjectDetectionService``
    public var errorPublisher: AnyPublisher<ObjectDetectionError?, Never> {
        errorSubject
            .removeDuplicates()
            .receive(on: DispatchQueue.main)
            .eraseToAnyPublisher()
    }
    private let errorSubject = CurrentValueSubject<ObjectDetectionError?, Never>(nil)
    private var errorSubscription: Cancellable!
    
    /// Publishes the inference time of every object detection iteration during the usage of ``ObjectDetectionService``
    public var currentObjectDetectionInferenceTimePublisher: AnyPublisher<TimeInterval, Never> {
        currentObjectDetectionInferenceTimeSubject
            .removeDuplicates()
            .receive(on: DispatchQueue.main)
            .eraseToAnyPublisher()
    }
    private let currentObjectDetectionInferenceTimeSubject = CurrentValueSubject<TimeInterval, Never>(0)
    private var currentObjectDetectionInferenceTimeSubscription: Cancellable!
    
    private var cameraOutputSubscription: Cancellable!
    
    let configuration: ObjectDetectionServiceConfiguration
    let modelFileName: String
    var cameraController: CameraControllerProtocol
    private var objectDetection: ObjectDetectionProtocol
    private var objectTracking: ObjectTrackingProtocol
    private var lastObjectDetectionCall: TimeInterval = 0
    
    /**
     Returns an ``ObjectDetectionService`` who publishes ``DetectedObject``s, ``ObjectDetectionError`` and performance metrics.
     
     - Parameters:
        - modelFileName: The name (without suffix) of the CoreML model generated by the SBB ML pipeline. The CoreML model file needs to be added to your App target.
        - configuration: The parametrizable ``ObjectDetectionServiceConfiguration``. You should only specify a custom configuration, if you do not want to use the (optimized) default configuration.
     */
    public init(modelFileName: String, configuration: ObjectDetectionServiceConfiguration = ObjectDetectionServiceConfiguration()) {
        self.modelFileName = modelFileName
        self.configuration = configuration
        self.cameraController = CameraController(previewVideoGravity: configuration.previewVideoGravity, depthRecordingEnabled: configuration.distanceRecordingEnabled)
        self.objectDetection = ObjectDetection(modelProvider: ModelProvider(modelFileName: modelFileName, computeUnits: configuration.computeUnits), thresholdProvider: ThresholdProvider(